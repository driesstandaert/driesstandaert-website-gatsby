// Desktop grid
$grid-bp3-columns: 12;
$grid-bp3-sideMargin: 0px;
$grid-bp3-gutter: 0px;
$grid-bp3-breakpoint: 1280px;

// Tablet grid
$grid-bp2-columns: 12;
$grid-bp2-sideMargin: 0px;
$grid-bp2-gutter: 0px;
$grid-bp2-breakpoint: 1020px;

// Mobile grid
$grid-bp1-columns: 4;
$grid-bp1-sideMargin: 0px;
$grid-bp1-gutter: 0px;
$grid-bp1-breakpoint: 620px;

// pixels to % variables
$bp3-grid-width: 100% -
  (($grid-bp3-sideMargin * 2 / $grid-bp3-breakpoint) * 100%);
$bp2-grid-width: 100% -
  (($grid-bp2-sideMargin * 2 / $grid-bp2-breakpoint) * 100%);
$bp1-grid-width: 100% -
  (($grid-bp1-sideMargin * 2 / $grid-bp1-breakpoint) * 100%);

$bp3-gutter: (
  (
      $grid-bp3-gutter /
        ($grid-bp3-breakpoint - ($grid-bp3-sideMargin * 2))
    ) * 100%
);
$bp2-gutter: (
  (
      $grid-bp2-gutter /
        ($grid-bp2-breakpoint - ($grid-bp2-sideMargin * 2))
    ) * 100%
);
$bp1-gutter: (
  (
      $grid-bp1-gutter /
        ($grid-bp1-breakpoint - ($grid-bp1-sideMargin * 2))
    ) * 100%
);

@function col-width($i, $columns) {
  @return 100% / $columns * $i;
}

@mixin col-props($i, $columns, $gutter) {
  box-sizing: border-box;
  width: col-width($i, $columns);
  padding-left: $gutter/2;
  padding-right: $gutter/2;
}

@mixin columns-loop($name, $columns, $gutter) {
  @for $i from 0 through $columns {
    &-#{$name}-#{$i} {
      @include col-props($i, $columns, $gutter);
    }
    &-#{$name}-shift-#{$i} {
      margin-left: col-width($i, $columns);
    }
  }
}

@mixin grid-base($width) {
  box-sizing: border-box;
  display: flex;
  margin-left: auto;
  margin-right: auto;
  flex-wrap: wrap;
  max-width: $grid-bp3-breakpoint;
  width: $width;
}

.f-grid {
  @include grid-base($bp3-grid-width);
  @media screen and (max-width: $grid-bp2-breakpoint) {
    width: $bp2-grid-width;
  }
  @media screen and (max-width: $grid-bp1-breakpoint) {
    width: $bp1-grid-width;
  }
  &-0 {
    @include grid-base(100%);
  }
  @include mq(bp4) {
    &.u-reverse {
      flex-direction: row-reverse;
    }
    &.u-no-max-width {
      max-width: none;
    }
  }
}

.f-col {
  @include columns-loop(bp3, $grid-bp3-columns, $bp3-gutter);
  @media screen and (max-width: $grid-bp2-breakpoint) {
    @include columns-loop(bp2, $grid-bp2-columns, $bp2-gutter);
  }
  @media screen and (max-width: $grid-bp1-breakpoint) {
    @include columns-loop(bp1, $grid-bp1-columns, $bp1-gutter);
  }
}

.u-ver-center {
    display: flex;
    align-items: center;
}

.u-hor-center {
  justify-content: center;
}

.u-space-between {
    justify-content: space-between;
}

.u-grid-full {
  max-width: 1440px;
}
